import java.time.ZoneId
import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
        classpath 'org.ajoberstar:gradle-git:1.7.2'
    }
}
plugins {
    id 'java'
    id 'application'
    id 'distribution'
    id 'idea'
    id "com.peterabeles.gversion" version "1.5.0"
}

gradle.projectsEvaluated {
    compileJava.dependsOn createVersionFile
}

apply plugin: 'org.ajoberstar.grgit'
mainClassName = "aion.dashboard.AionMain"

sourceCompatibility =11

repositories {
    mavenCentral()
}



group 'aion-etl'
version = "2.4-${grgit.head().abbreviatedId}-${DateTimeFormatter.ofPattern("hhmm-dd-MM-yyyy").format(ZonedDateTime.now( ZoneId.of("UTC")))}"

gversion {
    srcDir       = "src/main/java/"           // path is relative to the sub-project by default
    // Gradle variables can also be used
    // E.g. "${project.rootDir}/module/src/main/java"
    classPackage = "aion.dashboard.config"
    className    = "BuildVersion"                // optional. If not specified GVersion is used
    dateFormat   = "yyyy-MM-dd'T'HH:mm:ss'Z'" // optional. This is the default
    timeZone     = "UTC"                      // optional. UTC is default
    debug        = true                      // optional. print out extra debug information
    language     = "java"                     // optional. Can be Java or Kotlin, case insensitive
    explicitType = false                      // optional. Force types to be explicitly printed
}
wrapper{
    gradleVersion ='5.4.1'
}

jar {
    manifest{
        attributes 'Main-Class' : "aion.dashboard.AionMain"
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

applicationDistribution.from('config.json'){
    into''
}
applicationDistribution.from('native'){
    into'native'
}
applicationDistribution.from('contracts'){
    into 'contracts'
}





dependencies {
    // testing
    // testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'junit', name: 'junit', version: '4.4'
    testCompile group:'org.mockito', name:'mockito-core', version: '2.+'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.2.0'
    testRuntime("org.junit.platform:junit-platform-launcher:1.2.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.2.0")
    testRuntime("org.junit.vintage:junit-vintage-engine:5.2.0")

    // email
    compile group: 'javax.activation', name: 'activation', version: '1.1'
    compile group: 'com.sun.mail', name: 'javax.mail', version: '1.5.5'

    // logging (required by both our project and aion-javaapi)
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'

    // project-specific
    compile group: 'org.json', name: 'json', version: '20180130'
    compile group: 'com.zaxxer', name: 'HikariCP', version: '3.1.0'                             // Database Pool
    compile group: 'com.google.guava', name: 'guava', version: '26.0-jre'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.5'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.6'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    compile group: 'io.projectreactor', name: 'reactor-core', version: '3.1.0.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.3.RELEASE'

    // aion-javaapi
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.5'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.5.0'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'
    compile files('lib/libAionApi-v0.1.17.643dae5-19-05-08.jar')
    compile files('lib/3rdParty.libnzmq-0.3.4.jar')
    compile files('lib/libnsc.jar')
    compile files('lib/aion_vm_api-0.3.2.jar')
    compile files('lib/modAionBase-0.3.2.jar')
    compile files('lib/modCrypto-0.3.2.jar')
    compile files('lib/modLogger-0.3.2.jar')
    compile files('lib/modRlp-0.3.2.jar')
    compile files('lib/modUtil-0.3.2.jar')
    compile files('lib/modMcf.jar')
    compile files('lib/modAionImpl.jar')
    compile files('lib/org-aion-avm-userlib.jar')
    compile files('lib/org-aion-avm-api.jar')
    compile files('lib/aion_fastvm-61c8e4b.jar')
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'



}